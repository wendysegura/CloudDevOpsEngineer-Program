Description: >
    Wendy Segura

Parameters:

    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String

Resources:
    #Specifies the stack resources and their properties
    #LoadBalancer Security Group
    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow HTTP from and to our server
            VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
              #might need to be back to 8080 for to/from
              #- IpProtocol: tcp
              #FromPort: 8080
              #ToPort: 8080
              #CidrIp: 0.0.0.0/0
    #WebServer Security Group
    WebServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow HTTP from and to our server & SSH in our server
            VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0          

    #Autoscaling group configuration
    #The Launch configuration will tell the scaling group what you want to launch, 
    #and the scaling policies will tell it WHEN to execute the scaling, either up or down. 
    WebAppLaunchConfig:        
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          UserData:
            Fn::Base64: !Sub |
              #!/bin/bash
              sudo yum -y install httpd
              sudo service httpd start
              sudo yum install wget -y
              cd /var/www/html/
              sudo wget http://udagram.com.s3-website-us-west-2.amazonaws.com/
              sudo mv /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/welcome.backup
              systemctl restart httpd

          ImageId: ami-079596bf7a949ddf8
          #ami-005bdb005fb00e791
          IamInstanceProfile: !Ref 'RootInstanceProfile'
          SecurityGroups:
          - Ref: WebServerSecGroup
          InstanceType: t3.medium
          BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'
    #Adding the Instance Profile to grant access to S3
    RootInstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        #Path: /
        Roles:
          - !Ref UdacityS3
    UdacityS3:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: ec2.amazonaws.com
              Action: sts:AssumeRole
        #Path: /
    RolePolicies:
      Type: AWS::IAM::Policy
      DependsOn:
        - LBSecGroup
      Properties:
        PolicyName: UdacityPolicy3
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: '*'
              Resource: '*'
        Roles:
          - !Ref UdacityS3

    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
          VPCZoneIdentifier:
          - Fn::ImportValue:
              !Sub "${EnvironmentName}-PRIV-NETS"
          LaunchConfigurationName: 
            Ref: WebAppLaunchConfig
          MinSize: '3'
          MaxSize: '5'
          TargetGroupARNs:
          - Ref: WebAppTargetGroup
          
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Subnets:
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-NET1"
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-NET2"
          SecurityGroups: 
          - Ref: LBSecGroup

    WebAppTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 8
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 5
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId: 
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"

    Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
        LoadBalancerArn:
          Ref: WebAppLB
        Port: '80'
        Protocol: HTTP

    ALBListenerGroup:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
          Actions:
          - Type: forward
            TargetGroupArn: !Ref 'WebAppTargetGroup'
          Conditions:
          - Field: path-pattern
            Values: [/]
          ListenerArn: !Ref 'Listener'
          Priority: 1

Outputs:
#The values that are returned when you view
#your stacks property

    WebAppLB: 
        Description: A reference to the APP's URL Link 
        Value: !Join [ "", [ "http://", !GetAtt WebAppLB.DNSName]]
        Export:
          Name: "DNSName-Link"
